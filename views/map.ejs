<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <style>
        #map {
            height: 400px;
            width: 100%;
        }
    </style>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
    integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="./main.css">
    <script
  src="https://code.jquery.com/jquery-3.4.1.min.js"
  integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo="
  crossorigin="anonymous"></script>
</head>
<body>
    <nav>
                <% include ./partials/nav.ejs %>
    </nav>
    <div class="container">
    <h1>Local Events</h1>
    <div id="map">

    </div>
    <div class = "locations">
            <table style="width:100%">
                <% locations.forEach((data, index) => { %>    
                    <tr>
                      <td class="lat"><%=data.lat_in%></td>
                      <td class="lng"><%=data.lng_in%></td> 
                    </tr>
                <%})%>
            </table>     

    </div>
</div>

<script>
//    $latObj = $('.lat')
//    console.log($latObj)
//    console.log(typeof $latObj)
//    console.log($latObj)
//   $latObj[5].forEach(function(element) {
//   console.log(element);
// });
function grabData() {
    // an array of objects with lat and lng coordinates
    const locationsArray = []
    // looping over each table row to console log the index and lat value (text) or index and lng value (text) of each item in the collection with class .lat and class of .lng, respectively
    $('tr').each(function(index){
    console.log(index + ' lat: ' + $('.lat').eq(index).text())
    console.log(index + ' lng:' + $('.lng').eq(index).text())
    // creating an object with lat and lng variables that are taking the text of each item with .lat class or .lng class and turning it into a number
    const latLngObj = {
        lat: Number($('.lat').eq(index).text()),
        lng: Number($('.lng').eq(index).text())
    }
    // pushing each lat and lng object into the locationsArray
    locationsArray.push(latLngObj)
    })
    // saving the locationsArray inside the grabData function (to be used below)
    return locationsArray
}



    function initMap(){
        // set a variable equal to the grabData function that represents all of the lat lng objects pushed into the locationsArray
        let latLongData = grabData()
        let options = {
            zoom:8,
            center: {lat:41.6032, lng:-73.0877}
        }
        let map = new google.maps.Map(document.getElementById('map'), options);
        console.log('hi')
        
   

        function addMarker(coords){
            let marker = new google.maps.Marker({
                position:coords,
                map:map
            })
        }
        // looping over the latLongData which is equal to the grabData function which has saved all of the lat long objects pushed into the locationsArray.  I.e. basically looping over the array of objects made up of lat and lng values
        latLongData.forEach(pin=>{
            addMarker({lat:pin.lat, lng: pin.lng})
        })
        // hardcoded data used initially
        // addMarker({lat: 42.5, lng:-72.5})
        // addMarker({lat: 42.7, lng:-71.8})
        // addMarker({lat: 42.9, lng:-72.3})
       
    }

    // old function not being used anymore
    // function getLatLng() {
    //     console.log('hi')
    //     const lat = Number($('.lat').text())
    //     const lng = Number($('.lng').text())
    //     return {
    //         lat:lat,
    //         lng: lng
    //     }
    // }


 

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA8-Zm5IHmTQpiH8u5LlokQOhhzn_GJGig&callback=initMap" async defer></script>
</body>
</html>